version: '3.3'

services:
  database:
    container_name: recruiting_platform_database
    image: postgres:11-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    ports:
      - '64030:5432'
    volumes:
      # Entry point / Create database
      - ./volumes/init/initialize-db.sql:/docker-entrypoint-initdb.d/initialize-db.sql
      # Persistance
      #- ./volumes/database/data/:/var/lib/postgresql/data
    command: postgres -c stats_temp_directory=/tmp
  pgadmin:
    container_name: recruiting_platform-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '64040:80'
    links:
      - database
  api:
    container_name: recruiting_platform_api
    build:
      context   : ./
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/recruiting_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SONAR_QUBE_HOST=sonarqube:9000
    ports:
      - '64020:8086'
    depends_on:
      - database
      - sonarqube
  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - /tmp/opt/sonarqube/conf:/opt/sonarqube/conf \
      - /tmp/opt/sonarqube/logs:/opt/sonarqube/data \
      - /tmp/opt/sonarqube/data:/opt/sonarqube/logs \
      - /tmp/opt/sonarqube/extensions:/opt/sonarqube/extensions \
    ports:
      - "9000:9000"

