stages:
  - Test
  - Build
  - Sonar
  - Deploy
  - Integration Tests

test:
  stage: Test
  script:
    - echo "Testing the code..."
    - docker build -t recruiting-platform-service --target=test .

build:
  stage: Build
  script:
    - echo "Compiling the code..."
    - docker build -t recruiting-platform-service --target=build .

code quality:
  stage: Sonar
  script:
    - echo "Scanning code with sonarQube (WIP)"

.prepare_deploy_step: &prepare_deploy_step
  - sed -i 's/CI_PIPELINE_IID/$CI_PIPELINE_IID/' ./src/main/resources/application.yml
  - sed -i 's/CI_COMMIT_SHORT_SHA/$CI_COMMIT_SHORT_SHA/' ./src/main/resources/application.yml
  - sed -i 's/CI_COMMIT_BRANCH/$CI_COMMIT_BRANCH/' ./src/main/resources/application.yml
  - docker login $ACR_SERVER -u $ACR_USERNAME -p $ACR_PASSWORD

deploy-job-staging:
  stage: Deploy
  environment:
    name: stage
    url: https://stage-latam-recruitingplatform-api.azurewebsites.net
  only:
    - develop
  script:
    - echo "Deploying application stagging..."
    - *prepare_deploy_step
    - docker build --build-arg PROFILE=stage -f Dockerfile.deploy . -t $ACR_SERVER/recruiting-platform-service:latest --target=deploy
    - docker push $ACR_SERVER/recruiting-platform-service:latest
    - sleep 180
    - echo "Application deployed successfully!"

deploy-job-prod:
  stage: Deploy
  environment:
    name: prod
    url: https://api-recruitingplatform.bypgd.com
  only:
    - main
  script:
    - echo "Deploying application to production..."
    - *prepare_deploy_step
    - docker build --build-arg PROFILE=prod -f Dockerfile.deploy . -t $ACR_SERVER/recruiting-platform-service:stable --target=deploy
    - docker push $ACR_SERVER/recruiting-platform-service:stable
    - sleep 180
    - echo "Application deployed successfully!"

postman-tests-staging:
  stage: Integration Tests
  only:
    - develop
  script:
    - echo "Running Postman Collection with stage environment..."
    - docker pull postman/newman
    - docker run -v $PWD/src/test/postman:/etc/newman -t postman/newman run /etc/newman/recruiter-collection.postman_collection.json -e /etc/newman/stage.postman_environment.json -g /etc/newman/workspace.postman_globals.json

postman-tests-prod:
  stage: Integration Tests
  only:
    - main
  script:
    - echo "Running Postman Collection with production environment..."
    - docker pull postman/newman
    - docker run -v $PWD/src/test/postman:/etc/newman -t postman/newman run /etc/newman/recruiter-collection.postman_collection.json -e /etc/newman/prod.postman_environment.json -g /etc/newman/workspace.postman_globals.json

